# diagnosticlogging.ini file
#
# Copyright 2007-2008 ARM Limited. All rights reserved.
#
# Any line beginning with '#' is a comment and is ignored
#


[VERSION]
# Format:
# VERSION = NUMBER
# 
# The interface is not currently versioned, this is in place for
# future expansion
#

VERSION = 2



[FILE]
# Format:
# PATH = <PATH TO FILE>
#
# If you wish to log to file in addition to e.g. the GUI window then
# specify a path to the directory you want the log file to be created in.
# The file "user_diagnostic_log.txt" will be created, and the log file
# will be overwritten each time you run the program
#
# If the line "MODE = APPEND" is present, then diagnostic logs will be
# appended to the log file instead of overwriting.
#
# If there is no path, or the path is invalid, then no logging to file
# will take place.  Please note that enabling this option will result
# in a negative impact to performance.
#
# If the path is specified as './' then the log file will be written
# to the current working directory
# 
# If more than one path is specified only the first will be used
#
# PATH = ./
# MODE = APPEND


[DEFAULT]
# Format:
# DEFAULT = CONFIGURATION
# 
# Select any combination of FATAL, ERROR, WARN, INFO or DETAIL
#
# If more than one default is specified only the first will be used
# 

DEFAULT = FATAL ERROR WARN INFO



[COMPONENTS]
# Format:
# CATEGORY NAME = CONFIGURATION
#
# Name can contain spaces, but must not contain '='.  Leading and
# trailing whitespace will be trimmed (e.g. "    A B C D    " will be
# treated as "A B C D"
#
# Names must be in UPPER CASE
# 
# Configuration is either DEFAULT or any combination of FATAL, ERROR,
# WARN, INFO, DETAIL and BASIC_CALLTRACE or FULL_CALLTRACE
# 
# DEFAULT results in the use of the combination specified in the [DEFAULT] section
#
# An empty configuration means no logging for that component
#
# If a component tries to write a log using a name that is not defined
# here then the [DEFAULT] settings will be used
#
# If the same component is specified more than once then the last
# occurrence will be used
# 
#
# Call Tracing:
# ============= 
# If you wish to enable tracing of API calls when connected to a
# target then add BASIC_CALLTRACE or FULL_CALLTRACE to the 
# "TARGET CONNECTION" option. e.g.:
# TARGET CONNECTION = FATAL ERROR WARN INFO DETAIL FULL_CALLTRACE
# 
# BASIC_CALLTRACE gives a one-line summary of each API call
# FULL_CALLTRACE gives detailed information on all parameters for each API call
#
# If both BASIC_CALLTRACE and FULL_CALLTRACE are specified then
# FULL_CALLTRACE will be used
#
# Call Tracing is currently only supported for CADI model connections
#

Breakpoints           = DEFAULT
Debug Symbols         = DEFAULT
Disassembly           = DEFAULT
Flash                 = DEFAULT
Image Load            = DEFAULT
Licensing             = DEFAULT
Memory                = DEFAULT
Registers             = DEFAULT
Run Control           = DEFAULT
Synchronization       = DEFAULT
Target Configuration  = DEFAULT
Target Connection     = DEFAULT
Trace                 = DEFAULT
Semihosting           = DEFAULT
